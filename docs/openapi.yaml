openapi: 3.0.0
info:
  title: Collaborative Document API
  version: 1.0.0
  description: API for collaborative document editing app

servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        folder:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Permission:
      type: object
      properties:
        userId:
          type: string
        role:
          type: string
          enum: [admin, editor, viewer]
    Folder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userId:
          type: string

security:
  - cookieAuth: []

paths:
  /auth/login:
    post:
      summary: Login with Firebase token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /auth/logout:
    post:
      summary: Logout
      responses:
        '200':
          description: Logout successful

  /auth/protected:
    get:
      summary: Get current user info
      responses:
        '200':
          description: User info

  /docs:
    get:
      summary: List documents
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
    post:
      summary: Create a new document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                folder:
                  type: string
      responses:
        '201':
          description: Document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

  /docs/{id}:
    get:
      summary: Get document by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
    put:
      summary: Update document
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                folder:
                  type: string
      responses:
        '200':
          description: Document updated
    delete:
      summary: Delete document
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document deleted

  /docs/{id}/permissions:
    put:
      summary: Update document permissions
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Permission'
      responses:
        '200':
          description: Permissions updated

  /docs/folders/all:
    get:
      summary: List folders
      responses:
        '200':
          description: List of folders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'

  /docs/folders:
    post:
      summary: Create folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Folder created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'

  /docs/folders/{id}:
    delete:
      summary: Delete folder and its documents
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Folder deleted 